#! /usr/bin/python3
# encoding=utf-8
# html-index-odt
# Last modified: 4 August 2021
#
# For each directory listed on the command line build an index.html from the
# template index.html.tmpl. Insert into the <tbody> of the first <table> a
# <tr> for each HTML file. Also include download links to ODT and PDF versions.

import glob
import os
import sys
import re
import lxml.html
from lxml.builder import E
#from urllib.parse import quote
from collections import OrderedDict

def attribs(**attribs):
	return OrderedDict(sorted(attribs.items(), key=lambda t: t[0]))

initial_cwd = os.getcwd()
verbose = False
for folder in sys.argv[1:]:
	if folder == "--verbose":
		verbose = True
		continue
	if verbose:
		print("%s..." % folder)
	os.chdir(initial_cwd)
	os.chdir(folder)

	# Load the HTML template
	template = lxml.html.parse(open("index.html.tmpl"))
	target_tbody = template.xpath("//table/tbody")[0]
	
	# Load a list of the HTML files
	# Skip index.html
	# Sort them by handout number
	filenames = [filename for filename in glob.glob("*.html") if filename != "index.html"]
	filenames = sorted(filenames, key=lambda key: re.sub(r"(\d+)", lambda m: "%02d" % int(m.group(1)), os.path.splitext(os.path.basename(key))[0], count=1))

	for filename in filenames:
		if verbose:
			print(" • %s" % filename)

		doc = lxml.html.parse(open(filename))
		title = doc.xpath("//title")[0].text

		# Drop part of title before the first colon since we assume it is the website name.
		m = re.match(r'^[^:]+:\s+(.+)$', title)
		if m:
			title = m.group(1)
	
		filename_noext = os.path.splitext(filename)[0]
		
		# Same rule as used by merger.cgi
		assert re.match('^([A-Za-zА-Яа-я0-9\(\),\. -]+)$', filename_noext), filename_noext

		# Create a table row to represent this document.
		tr = E.tr()
		tr.append(E.td(
			E.input(attribs(type='checkbox', name='selected', value=filename_noext)),
			E.a(title, {'href':filename})
			))
		tr.append(E.td(E.a("ODT", attribs(href="%s.odt" % filename_noext, type='application/vnd.oasis.opendocument.text', download='__DUMMY__'))))
		tr.append(E.td(E.a("PDF", attribs(href="%s.pdf" % filename_noext, type='application/pdf', download='__DUMMY__'))))
		tr.tail = '\n\t'

		target_tbody.append(tr)

	output = lxml.html.tostring(template, encoding='unicode', pretty_print=False, include_meta_content_type=True)
	output = output.replace('="__DUMMY__"','')
	output = output.encode("utf-8")
	
	# If the output file already exists, see if the one we would write would be different.
	if os.path.exists("index.html"):
		if output == open("index.html", "rb").read():
			#print ("Unchanged.")
			continue

	# Write out the finished index.
	open("index.html", "wb").write(output)

	# Remove compressed version since it is now obsolete.
	if os.path.exists("index.html.gz"):
		os.unlink("index.html.gz")

